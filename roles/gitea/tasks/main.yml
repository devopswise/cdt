---
- name: Create a directory to store volume
  file: path="{{ item }}" state=directory mode=0777 owner="{{ gitea_user }}" group="{{ gitea_group }}"
  with_items:
    - "{{ cdt_log }}/{{ gitea_service_name }}"
    - "{{ cdt_data }}/{{ gitea_service_name }}"
    - "{{ cdt_data }}/{{ gitea_service_name }}/mysql"
    - "{{ cdt_data }}/{{ gitea_service_name }}/data"
    #- "{{ cdt_data }}/{{ gitea_service_name }}/data/gitea"
    #- "{{ cdt_data }}/{{ gitea_service_name }}/data/gitea/conf"
  become: yes
  become_method: sudo

- name: create directory for project_src
  file: path="/tmp/{{ gitea_service_name }}" state=directory
  become: yes
  become_method: sudo

- name: generate a random mysql password
  set_fact:
    gitea_mysql_pass: "{{ lookup('password', '../credentials/gitea_mysql_pass chars=ascii_letters,digits,hexdigits length=12') }}"
    openldap_admin_pass: "{{ lookup('password', '../credentials/openldap_admin_pass chars=ascii_letters,digits,hexdigits length=12') }}"
    keycloak_client_secret: "{{ lookup('file', '../credentials/keycloak_client_secret') }}"

- name: sync docker-compose.yml
  template:
    src: docker-compose.yml.j2
    dest: /tmp/{{ gitea_service_name }}/docker-compose.yml
    mode: 0755
  become: yes
  become_method: sudo

- name: sync Dockerfile for gitea
  template:
    src: Dockerfile.j2
    dest: /tmp/{{ gitea_service_name }}/Dockerfile
    mode: 0755
  become: yes
  become_method: sudo

- name: copy generated certificates to gitea folder
  copy:
    src: ../credentials/{{ base_domain }}.crt
    dest: "/tmp/{{ gitea_service_name }}/{{ base_domain }}.crt"
  become: yes
  become_method: sudo

- name: copy wait-for-it.sh to gitea build folder
  copy:
    src: wait-for-it.sh
    dest: /tmp/{{ gitea_service_name }}/wait-for-it.sh
    mode: 0755
  become: yes
  become_method: sudo

- name: sync app.ini
  template:
    src: app.ini.j2
    dest: "{{ cdt_data }}/{{ gitea_service_name }}/data/gitea/conf/app.ini"
    mode: 0644
    owner: "{{ gitea_user }}"
    group: "{{ gitea_group }}"
  become: yes
  become_method: sudo
  when: false

- name: "Run gitea service {{ gitea_version }}"
  become: yes
  become_method: sudo
  docker_service:
    project_name: "{{ gitea_service_name }}"
    project_src: "/tmp/{{ gitea_service_name }}"
  register: output

- name: get gitea container name
  set_fact: container_name="{{ vars['output']['ansible_facts']['gitea'].keys()[0] }}"

- name: Wait until Gitea is available
  shell: "curl -k --head --silent {{ cdt_protocol }}://{{ gitea_service_name }}.{{ base_domain }}"
  register: result
  until: result.stdout.find("200 OK") != -1
  retries: 20
  delay: 5

- name: create default admin user
  command: "docker exec -i {{ container_name }} gitea admin create-user --name local.admin --password {{ openldap_admin_pass }} --email {{ admin_email }}  --admin"
  become: yes
  become_method: sudo

#gitea admin auth add-oauth --name keycloak --provider openidConnect --key cdt --secret '8c9c1d91-4aa4-4ccc-a1fd-a2541ea7a0cc' --auto-discover-url 'https://keycloak.precdt.devopswise.co.uk/auth/realms/master/.well-known/openid-configuration'

- name: create oauth authentication for gitea
  command: "docker exec -i {{ container_name }} gitea admin auth add-oauth --name keycloak --provider openidConnect --key cdt --secret '{{ keycloak_client_secret }}' --auto-discover-url '{{ cdt_protocol }}://keycloak.{{ base_domain }}/auth/realms/master/.well-known/openid-configuration'"
  ignore_errors: yes
  become: yes
  become_method: sudo

- name: restart gitea
  docker_service:
    project_name: "{{ gitea_service_name }}"
    project_src: "/tmp/{{ gitea_service_name }}"
    restarted: true
    state: present
  become: yes
  become_method: sudo