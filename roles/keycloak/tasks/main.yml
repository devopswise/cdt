---
- name: Create a directory to store volume
  file: path="{{ item }}" state=directory mode=0777 owner="{{ keycloak_user }}" group="{{ keycloak_group }}"
  with_items:
    - "{{ cdt_log }}/{{ keycloak_service_name }}"
    - "{{ cdt_data }}/{{ keycloak_service_name }}"
    - "{{ cdt_data }}/{{ keycloak_service_name }}/mysql"
    - "{{ cdt_data }}/{{ keycloak_service_name }}/data"
  become: yes
  become_method: sudo

- name: create directory for project_src
  file: path="/tmp/{{ keycloak_service_name }}" state=directory
  become: yes
  become_method: sudo

- name: generate a random mysql password
  set_fact:
    keycloak_mysql_pass: "{{ lookup('password', '../credentials/keycloak_mysql_pass chars=ascii_letters,digits,hexdigits length=12') }}"
    openldap_admin_pass: "{{ lookup('password', '../credentials/openldap_admin_pass chars=ascii_letters,digits,hexdigits length=12') }}"

- name: sync docker-compose.yml
  template:
    src: docker-compose.yml.j2
    dest: /tmp/{{ keycloak_service_name }}/docker-compose.yml
    mode: 0755
  become: yes
  become_method: sudo

- name: sync keycloak-client-cdt.json
  template:
    src: keycloak-client-cdt.json.j2
    dest: "{{ cdt_data }}/{{ keycloak_service_name }}/data/keycloak-client-cdt.json"
    mode: 0755
  become: yes
  become_method: sudo

- name: copy wait-for-it.sh to keycloak build folder
  copy:
    src: wait-for-it.sh
    dest: /tmp/{{ keycloak_service_name }}/wait-for-it.sh
    mode: 0755
  become: yes
  become_method: sudo

- name: load autogenerated passwords
  set_fact:
    openldap_slapd_pass: "{{ lookup('password', '../credentials/openldap_slapd_pass chars=ascii_letters,digits,hexdigits length=12') }}"
    openldap_admin_pass: "{{ lookup('password', '../credentials/openldap_admin_pass chars=ascii_letters,digits,hexdigits length=12') }}"
    openldap_persona_alice_pass: "{{ lookup('password', '../credentials/openldap_persona_alice_pass chars=ascii_letters,digits,hexdigits length=12') }}"
    openldap_persona_bob_pass: "{{ lookup('password', '../credentials/openldap_persona_bob_pass chars=ascii_letters,digits,hexdigits length=12') }}"

- name: "Run keycloak service {{ keycloak_version }}"
  become: yes
  become_method: sudo
  docker_service:
    project_name: "{{ keycloak_service_name }}"
    project_src: "/tmp/{{ keycloak_service_name }}"
  register: output

- name: Wait until Keycloak is available
  shell: "curl -k --head --silent {{ cdt_protocol }}://{{ keycloak_service_name }}.{{ base_domain }}"
  register: result
  until: result.stdout.find("200 OK") != -1
  retries: 20
  delay: 5

- set_fact: run_inside_container="docker exec -i {{ vars['output']['ansible_facts']['keycloak'].keys()[0] }}"

- name: copy configure-keycloak.sh to keycloak build folder
  template:
    src: configure-keycloak.sh.j2
    dest: "{{ cdt_data }}/{{ keycloak_service_name }}/data/configure-keycloak.sh"
    mode: 0755
  become: yes
  become_method: sudo

- name: run configure-keycloak script
  command: "{{ run_inside_container }} /opt/jboss/cdt/configure-keycloak.sh"
  become: yes
  become_method: sudo
  register: keycloak_client_secret

- local_action: copy content={{ keycloak_client_secret.stdout }} dest=../credentials/keycloak_client_secret