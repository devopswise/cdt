---
- name: Create a directory to store volume
  file: path="{{ item }}" state=directory mode=0777 owner="{{ cdtportal_user }}" group="{{ cdtportal_group }}"
  with_items:
    - "{{ cdt_log }}/{{ cdtportal_service_name }}"
    - "{{ cdt_data }}/{{ cdtportal_service_name }}"
    - "{{ cdt_data }}/{{ cdtportal_service_name }}/config"
    - "{{ cdt_data }}/{{ cdtportal_service_name }}/data"
  become: yes
  become_method: sudo

- name: create directory for project_src
  file: path="/tmp/{{ cdtportal_service_name }}" state=directory
  become: yes
  become_method: sudo

- name: get or generate local.admin pass
  set_fact:
    openldap_admin_pass: "{{ lookup('password', '../credentials/openldap_admin_pass chars=ascii_letters,digits,hexdigits length=12') }}"

- name: sync application.yaml file for cdtportal
  template:
    src: application.yml.j2
    dest: /{{ cdt_data }}/{{ cdtportal_service_name }}/config/application.yml
    mode: 0755
  become: yes
  become_method: sudo

- name: sync docker-compose.yml
  template:
    src: docker-compose.yml.j2
    dest: /tmp/{{ cdtportal_service_name }}/docker-compose.yml
    mode: 0755
  become: yes
  become_method: sudo

- name: "Run cdtportal service {{ cdtportal_version }}"
  become: yes
  become_method: sudo
  docker_service:
    project_name: "{{ cdtportal_service_name }}"
    project_src: "/tmp/{{ cdtportal_service_name }}"
  register: output

- name: Run a simple smoke test to check if app's are running
  shell: "curl -k --head --silent {{ cdt_protocol }}://{{ cdtportal_service_name }}.{{ base_domain }}/tool/status"
  register: result
  until: result.stdout.find("200 OK") != -1
  retries: 20
  delay: 5
