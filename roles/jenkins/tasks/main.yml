---
- name: Create a directory to store volume
  file: path="{{ item }}" state=directory mode=0777 owner="{{ jenkins_user }}" group="{{ jenkins_group }}"
  with_items:
    - "{{ cdt_log }}/{{ jenkins_service_name }}"
    - "{{ cdt_data }}/{{ jenkins_service_name }}"
  become: yes
  become_method: sudo

- name: create directory for project_src
  file: path="/tmp/{{ jenkins_service_name }}" state=directory
  become: yes
  become_method: sudo

- name: generate a random mysql password
  set_fact:
    openldap_slapd_pass: "{{ lookup('password', '../credentials/openldap_slapd_pass chars=ascii_letters,digits,hexdigits length=12') }}"
    openldap_admin_pass: "{{ lookup('password', '../credentials/openldap_admin_pass chars=ascii_letters,digits,hexdigits length=12') }}"
    openldap_persona_alice_pass: "{{ lookup('password', '../credentials/openldap_persona_alice_pass chars=ascii_letters,digits,hexdigits length=12') }}"
    openldap_persona_bob_pass: "{{ lookup('password', '../credentials/openldap_persona_bob_pass chars=ascii_letters,digits,hexdigits length=12') }}"

- name: sync docker-compose.yml
  template: 
    src: ../templates/docker-compose.yml.j2
    dest: /tmp/{{ jenkins_service_name }}/docker-compose.yml
    mode: 0755
  become: yes
  become_method: sudo

- name: copy jenkins Dockerfile 
  template:
    src: Dockerfile.j2
    dest: /tmp/{{ jenkins_service_name }}/Dockerfile
    mode: 0755
  become: yes
  become_method: sudo

#TODO what if not self-signed ?
- name: copy self-signed key
  copy:
    src: "../credentials/{{ base_domain }}.crt"
    dest: "/tmp/{{ jenkins_service_name }}/{{ base_domain }}.crt"
    mode: 0755
  become: yes
  become_method: sudo

- name: "Run jenkins service {{ jenkins_version }}"
  become: yes
  become_method: sudo
  docker_service:
    project_name: "{{ jenkins_service_name }}"
    project_src: "/tmp/{{ jenkins_service_name }}"
  register: output

- name: create reference job
  template:
    src: ../templates/multibranch-pipeline-job.xml.j2
    dest: /tmp/{{ jenkins_service_name }}/hrweb-java.xml
    mode: 0755
  become: yes
  become_method: sudo

- name: Wait untils Jenkins web API is available
  shell: "curl -k --head --silent {{ cdt_protocol }}://{{ jenkins_service_name }}.{{ base_domain }}/login?from=%2F"
  register: result
  until: result.stdout.find("200 OK") != -1
  retries: 20
  delay: 5
  when: false

- name: Create reference job using REST API
  shell: "curl -k -s -XPOST {{ cdt_protocol }}://{{ jenkins_service_name }}.{{ base_domain }}/createItem?name=hrweb-java -u alice.developer:{{ openldap_persona_alice_pass }} --data-binary @/tmp/{{ jenkins_service_name }}/hrweb-java.xml -H 'Content-Type:text/xml'"

- name: generate jenkins API
  when: false
  uri:
    url: '{{ cdt_protocol }}://{{ jenkins_service_name }}.{{ base_domain }}/crumbIssuer/api/xml?xpath=concat(//crumbRequestField,":",//crumb)'
    user: admin
    password: "{{ openldap_admin_pass }}"
    force_basic_auth: yes
    return_content: yes
    validate_certs: no
  register: crumb
  when: false

- name: set key
  set_fact:
    jenkins_ssh_key: "{{lookup('file', '../credentials/openldap_admin_sshkey.pem') }}"
    #headers:
    #  Jenkins-Crumb: "{{ crumb.content.split(':')[1] }}"
  when: false

#TODO: This should be moved to openldap playbook
- name: generate key-pair for admin
  local_action:
    module: shell
    _raw_params: ssh-keygen -t rsa -b 4096 -q -P '' -C 'your_email@example.com' -f ../credentials/openldap_admin_sshkey.pem
  when: false

- name: copy add-new-credential.groovy to target
  template:
    src: add-new-credential.groovy.j2
    dest: /tmp/{{ jenkins_service_name }}/add-new-credential.groovy
    mode: 0755
  become: yes
  become_method: sudo
  when: false

- name: Transfer script to run
  copy:
    src: ../credentials/openldap_admin_sshkey.pem
    dest: "{{ cdt_data }}/{{ jenkins_service_name }}/ssh-private-key.pem"
    mode: 0755
  become: yes
  become_method: sudo
  when: false
  
- name: make curl request to jenkins
  shell: "curl -k -f --user admin:{{ openldap_admin_pass }} --data-urlencode \"script@/tmp/{{ jenkins_service_name }}/add-new-credential.groovy\" {{ cdt_protocol }}://{{ jenkins_service_name }}.{{ base_domain }}/scriptText"
  when: false
  tags:
    - skip_ansible_lint
