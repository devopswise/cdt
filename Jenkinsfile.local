pipeline {
  agent { label 'jenkins-jnlp-slave-docker-cli' }
  
  parameters { string(defaultValue: "master", description: 'What branch?', name: 'CDT_BRANCH')
               string(defaultValue: "", description: 'Which server?', name: 'CDT_SERVER_FQDN') }

  stages {
    stage('run cdt-installer'){
      steps {
            withCredentials([sshUserPrivateKey(credentialsId: "devopswise", keyFileVariable: 'keyfile')]) {
                sh "ssh -o StrictHostKeyChecking=no -i ${keyfile} root@192.168.0.46 'xe snapshot-revert uuid=97cde43e-13ad-29b0-7b43-fc642a037371'"
                sh "ssh -o StrictHostKeyChecking=no -i ${keyfile} root@192.168.0.46 'xe vm-start vm=srvpre01'"
            }
            sh "sleep 15"
            withCredentials([string(credentialsId: 'AWS_ACCESS_KEY', variable: 'AWS_ACCESS_KEY_ID'),
                            string(credentialsId: 'AWS_SECRET_KEY', variable: 'AWS_SECRET_ACCESS_KEY')
                            ]) {
                            wrap([$class: 'AnsiColorBuildWrapper', colorMapName: "xterm"]) {
                                sh '''docker run -i \
                                    -e AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID} \
                                    -e AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY} \
                                    -e DO_NOT_PROVISION_EC2="true" \
                                    -e CDT_BRANCH=${CDT_BRANCH} \
                                    -e SERVER_FQDN=${CDT_SERVER_FQDN} \
                                    -e KEY_PAIR=dwtools \
                                    -e PEM_FILE=/opt/cdt/dwtools.pem \
                                    -e DEBUG="-vv" \
                                    -v /opt/source/cdt-test/aws:/opt/cdt \
                                    devopswise/cdt-installer:latest "cdt --launch" '''
                            }
            }
       }
    }
  }
}

